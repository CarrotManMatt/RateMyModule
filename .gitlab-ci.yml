stages:
    - check
    - test
    - build
    - deploy

check-updated-tag:
    image: python:3
    stage: check
    rules:
        - if: $CI_COMMIT_TAG

    tags:
        - python

    before_script:
        - apt-get update -y
        - pip install --upgrade pip
        - echo "installing yq"
        - pip install yq==3.2.3
        - apt-get install jq -y

    script:
        - echo "ensuring version matches tag:$CI_COMMIT_TAG"
        - tomlq --compact-output --raw-output '.tool.poetry.version' pyproject.toml | grep -q $CI_COMMIT_TAG

build-latest-docker-image:
    stage: build
    tags:
        - docker

    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

    before_script:
        - echo "logging in to registry:$CI_REGISTRY as $CI_REGISTRY_USER"
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - echo "pulling most recent latest image for caching"
        - docker pull $CI_REGISTRY_IMAGE:latest || true

    script:
        - echo "building docker image latest version:$CI_COMMIT_SHA"
        - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
        - echo "pushing built images to GitLab repository"
        - docker push $CI_REGISTRY_IMAGE:latest
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

deploy-latest-docker-image:
    stage: deploy

    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

    script:
        - echo "deploying latest version:$CI_COMMIT_SHA"
        - "curl -H 'Authorization: Bearer xtv1S-2BiZX4FYi{^s~(' https://watchtower-update-latest.carrotmanmatt.com/v1/update  -I -s | head -n 1|cut -d$' ' -f2 | grep -q 200"

build-stable-docker-image:
    stage: build
    tags:
        - docker

    rules:
        - if: $CI_COMMIT_TAG

    when: manual

    before_script:
        - echo "logging in to registry:$CI_REGISTRY as $CI_REGISTRY_USER"
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - echo "pulling most recent stable image for caching"
        - docker pull $CI_REGISTRY_IMAGE:stable || true

    script:
        - echo "building docker image stable version:$CI_COMMIT_TAG"
        - docker build --cache-from $CI_REGISTRY_IMAGE:stable --tag $CI_REGISTRY_IMAGE:stable --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
        - echo "pushing built images to GitLab repository"
        - docker push $CI_REGISTRY_IMAGE:stable
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG

deploy-stable-docker-image:
    stage: deploy

    rules:
        - if: $CI_COMMIT_TAG

    script:
        - echo "deploying stable version:$CI_COMMIT_TAG"
        - "curl -H 'Authorization: Bearer x7>*+w^i0pX-)+DH6uiJ' https://watchtower-update-stable.carrotmanmatt.com/v1/update -I -s | head -n 1|cut -d$' ' -f2 | grep -q 200"
